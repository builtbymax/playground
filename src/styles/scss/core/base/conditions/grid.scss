//
//  Grid Configuration
//  ---------------------------------------------

//  Flexbox Grid calculator (Optional)
//  ---------------------------------------------

@if (map-get($appConfiguration, flex-grid) == true) {
  
  //  Flexbox Grid Classes
  //  ---------------------------------------------
  
  $flex-grid__gutter: 15px !default;
  $flex-grid__gap__row: $flex-grid__gutter !default;
  $flex-grid__gap__col: $flex-grid__gutter !default;
  
  $flex-grid__column-alignment: true !default;
  
  $flex-grid__col-display: flex !default;
  $flex-grid__col-flex-wrap: wrap !default;

  $flex-grid__row__class: 'flex-row' !default;
  $flex-grid__col__class: 'flex-col' !default;
  
  .#{$flex-grid__row__class} {
    display: $flex-grid__col-display;
    flex-wrap: $flex-grid__col-flex-wrap;
    row-gap: $flex-grid__gap__row;
    column-gap: $flex-grid__gap__col;
  }

  @if ($flex-grid__column-alignment) {

    $flex-grid__col-start: flex-start !default;
    $flex-grid__col-end: flex-end !default;
    $flex-grid__col-center: center !default;
    $flex-grid__col-align-center: center !default;
    $flex-grid__col-align-start: flex-start !default;
    $flex-grid__col-align-end: flex-end !default;

    .col-start { justify-content: $flex-grid__col-start; }
    .col-end { justify-content: $flex-grid__col-end; }
    .col-center { justify-content: $flex-grid__col-center; }
    .col-align-center { align-items: $flex-grid__col-align-center; }
    .col-align-start { align-items: $flex-grid__col-align-start; }
    .col-align-end { align-items: $flex-grid__col-align-end; }

  }

  $flex-grid__columns: 12 !default;
  $flex-grid__column-class__prefix: 'fx-' !default;

  //  Add additional properties to the grid columns
  $flex-grid__column__properties: () !default;

  @each $key, $value in $sizes {
    // only use min-width, not max-width sizes
    @if str-index($key, '-down') == null {
      // set media query
      @media (min-width: $value) {
        @each $class, $className in $grid-classes {
          // set grid columns only for the current media query
          @if $class == $key {
            // set grid columns
            @for $i from 1 through $flex-grid__columns {
              // classname would be for example: ".xs-1" & and the width would be "width: calc(1 * 100% / 12);"
              .#{$flex-grid__column-class__prefix}#{$className}-#{$i} {
                @if $i == 12 {
                  width: 100%;
                } @else {
                  // width: calc(($i * 100% / $flex-grid__columns) - ($flex-grid__gutter / ($flex-grid__columns)));
                  width: calc(((100% / #{$flex-grid__columns}) * #{$i}) - #{$flex-grid__gutter} * (1 - #{$i} / #{$flex-grid__columns}));
                }
                @each $property, $propValue in $flex-grid__column__properties {
                  #{$property}: $propValue;
                }
              }
            }
          }
        }
      }
    }
  }

}

//  CSS-Grid (Optional)
//  ---------------------------------------------

@if (map-get($appConfiguration, css-grid) == true) {

  $css-grid__columns: 12 !default;
  $css-grid__gutter: 20px !default;
  $css-grid__gap__row: $css-grid__gutter !default;
  $css-grid__gap__col: $css-grid__gutter !default;
  $css-grid__column-class__prefix: 'gd-' !default;

  //  Add additional properties to the grid columns
  $css-grid__column__properties: () !default;
  
  @each $key, $value in $sizes {
    // only use min-width, not max-width sizes
    @if str-index($key, '-down') == null {
      // set media query
      @media (min-width: $value) {
        @each $class, $className in $grid-classes {
          // set grid columns only for the current media query
          @if $class == $key {
            // set grid columns
            @for $i from 1 through $css-grid__columns {
              // classname would be for example: ".xs-1" & and the width would be "width: calc(1 * 100% / 12);"
              .#{$css-grid__column-class__prefix}#{$className}-#{$i} {
                grid-column: span $i;
                @each $property, $propValue in $css-grid__column__properties {
                  #{$property}: $propValue;
                }
              }
            }
          }
        }
      }
    }
  }
  
  //  CSS-Grid Classes
  //  ---------------------------------------------

  $css-grid__row__class: 'grid-row' !default;
  $css-grid__col__class: 'grid-col' !default;

  $css-grid__row__properties: (
    display: grid,
    grid-template-columns: repeat($css-grid__columns, 1fr),
    grid-row-gap: $css-grid__gap__row,
    grid-column-gap: $css-grid__gap__col,
  ) !default;

  $css-grid__col__properties: (
    display: flex,
    flex-direction: column,
  ) !default;
  
  .#{$css-grid__row__class}{
    @each $property, $propValue in $css-grid__row__properties {
      #{$property}: $propValue;
    }
  }
  
  .#{$css-grid__col__class}{
    @each $property, $propValue in $css-grid__col__properties {
      #{$property}: $propValue;
    }
  }

}